:root {
    color-scheme: light dark;
    --text-colour: rgb(19, 19, 19);
    --alt-text-colour: rgb(223, 221, 221);
    --toolbar-text-colour: rgb(188, 188, 188);
    --page-background: white;
    --shortcut-background: rgba(209, 209, 209, 0.9);
    --date-add-text-background-colour: #c1c1c1;
    --hyperlink-colour: blue;
    --base-height: 80vh;
    --shadow-colour: 0deg 0% 0%;

}

@media (prefers-color-scheme: light) {
    .force-dark {
        --text-colour: white;
        --alt-text-colour: rgb(121, 121, 121);
        --toolbar-text-colour: rgb(188, 188, 188);
        --page-background: rgb(48, 48, 48);
        --shortcut-background: rgba(19, 19, 19, 0.9);
        --date-add-text-background-colour: #4e4e4e;
        --hyperlink-colour: rgb(166, 166, 255);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --text-colour: white;
        --alt-text-colour: rgb(121, 121, 121);
        --toolbar-text-colour: rgb(188, 188, 188);
        --page-background: rgb(48, 48, 48);
        --shortcut-background: rgba(19, 19, 19, 0.9);
        --date-add-text-background-colour: #4e4e4e;
        --hyperlink-colour: rgb(166, 166, 255);
    }

    .force-light {
        --text-colour: rgb(19, 19, 19);
        --alt-text-colour: rgb(223, 221, 221);
        --toolbar-text-colour: rgb(188, 188, 188);
        --page-background: white;
        --shortcut-background: rgba(209, 209, 209, 0.9);
        --date-add-text-background-colour: #c1c1c1;
        --hyperlink-colour: blue;
    }
}

body,
html { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
        "Helvetica Neue", sans-serif;
    background-color: var(--page-background);
    color: var(--text-colour);

    margin: 0;
    padding: 0;

    /* Make the body a grid, so that the toolbar + countdown are 'layered' */
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
}

a,
a:visited {
    color: var(--hyperlink-colour);
}

.countdown-element-hide {
    display: none !important;
}

/* Container that fills the window, but vertically centers the (single) child
   item along the vertical axis */
.countdown-centering-container {
    display: flex;
    flex-direction: row;
    align-items: center;

    height: 100%;
    width: 100%;

    /* If we've got enough children, let them scroll */
    overflow-x: auto;

    grid-column: 1;
    grid-row: 1;
}

/* Region that contains countdowns, and stacks them along the row. */
.countdown-wrapper {
    display: flex;
    flex-direction: row;
    
    /* Center the content *horizontally*. Note that if you use "align-items:
       center" here then you'll have a hard time scrolling because in that case
       the items are *always* centered on their axis, not *relative* to the
       container */
    margin-left: auto;
    margin-right: auto;
    gap: 24px;
}

/* Manage the width of the whole column so that it isn't too small, but can also
   grow for e.g. 3-digit weeks */
.countdown-wrapper > .countdown-container {
    box-sizing: border-box;
    min-width: 2ch; /* stop it jiggling - width changing - on seconds changing */

    /* Place the font size here so that the min-width derived from the `ch` unit
       has something approximately right to work with */
    font-weight: 800;
    font-size: calc(var(--base-height) / 7);
}

/* Size each number+description to a fixed height to help with centering */
.countdown-element-container:not(.countdown-title-container) {
    box-sizing: border-box;
    
    cursor: default; /* Don't show an I-beam */
}

.countdown-number {
    /* Pull things in so they're a little tighter */
    margin-bottom: calc((var(--base-height) / 35) * -1);
    margin-top: calc((var(--base-height) / 120) * -1);
}

.countdown-title-container,
.countdown-description {
    font-weight: 100;
    font-size: calc(var(--base-height) / 30);
}

.countdown-reached-container {
    font-weight: 600;
    font-size: calc(var(--base-height) / 40);
    text-align: center;
}

.countdown-reached-emoji {
    font-size: calc(var(--base-height) / 10); /* Make party zomg-huge */
}

.countdown-title-container {
    overflow-x: auto; /* Scroll when contents are too big */
    position: relative; /* Don't drive the width */
    height: calc(var(--base-height) / 25); /* our child is absolute positioned,
                                              so we'd have no height without this */
    
    /* Move it around so the focus border (box shadow) doesn't touch the
       contained text exactly; e.g. breathing space */
    padding-left: 8px;
    margin-right: -8px;
    transform: translateX(-8px);

    /* Make sure we've got a width at all times */
    width: 100%;

    border-radius: 4px;

    transition: box-shadow 0.3s ease;
}

/* Focus rect when focus is within the container */
.countdown-title-container:focus-within,
.countdown-title-container:hover {
    outline: none;
    box-shadow: 0 0 0 2px var(--alt-text-colour);
}

.countdown-title {
    /* Pull the title out of the layout so we don't drive the container size */
    position: absolute;

    /* Don't want a system-drawn focus rect on the *Text* area */
    outline: none;

    white-space: nowrap;

    /* Make sure the editable area is something the user thinks they can click
       on. If not, single-char titles are only editable by clicking the single
       char, not the whole area */
    min-width: 9ch;
}

/* When it's reached, turn the layout of the column into a grid so we can put
   the date at the top, and the celebration else where */
.countdown-container.countdown-reached {
    display: grid;
    grid-template-rows: auto 1fr;
}

/* Celebration should be in the center of it's container */
.countdown-reached-container {
    align-self: center;
    cursor: default;
}

.countdown-reached button {
    color: var(--text-colour);
    font-size: calc(var(--base-height) / 60);
    background-color: transparent;
    border-style: solid;
    border-color: var(--alt-text-colour);
    border-radius: 4px;
    border-width: 1px;
    padding: 8px 12px;
    margin: 0px 4px;

    transition: background-color 0.3s ease;
}

.countdown-reached button:hover {
    background-color: var(--alt-text-colour);
}

.countdown-reached button:active {
    background-color: var(--text-colour) !important;
    color: var(--alt-text-colour);
}

/* UI Styles */

/* Wrapper container to postition content centrally */
dialog::backdrop,
dialog {
    border-width: 0px;
    background-color: transparent;
    box-shadow: none;
}

dialog[data-id="menu-container"] {
    padding: 100px 50px;
}

/* Menu itself, that hosts the content itself, and contains the background */
.menu-content {
    box-sizing: border-box;
    min-width: 240px;
    max-width: 99vw;
    max-height: 80vh;
    padding: 18px 24px;
    overflow-y: scroll;

    border: 1px solid var(--shortcut-background);
    box-shadow: 0px 1px 1.4px hsl(var(--shadow-colour) / 0.03),
                0px 4.3px 6px -0.2px hsl(var(--shadow-colour) / 0.07),
                0px 7.9px 11.1px -0.3px hsl(var(--shadow-colour) / 0.11),
                0px 14.1px 19.8px -0.5px hsl(var(--shadow-colour) / 0.15),
                0px 25px 35.1px -0.6px hsl(var(--shadow-colour) / 0.19);
    border-radius: 4px;
    background-color: var(--shortcut-background);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    -moz-backdrop-filter: blur(20px);

    font-weight: 300;
}

.menu-title {
    font-weight: 800;
    font-size: 24px;
    margin-bottom: 8px;
}

/* Container of items that are in a 2-col, N-row grid. e.g. list of shortcuts */
.menu-item-list {
    display: grid;
    grid-template-columns: minmax(10ch, 50ch) auto;
    row-gap: 6px;
    margin-bottom: 12px;
}

.menu-item-list-label {
    overflow-x: hidden;
    white-space: nowrap;
    align-self: center;
}

.menu-item-list-detail {
    justify-self: end;
    font-family: monospace;
    font-size: 14px;
}

.menu-add-countdown-container {
    display: flex;
    flex-direction: column;
    background-color: var(--page-background);
    border-radius: 4px;
    padding: 10px 12px 4px;
    margin: 0px -12px 8px;
}

/* Make sure the label elements – or anything else – are layed out as block, not
   inline */
.menu-add-countdown-container > * {
    display: block;
    margin-bottom: 8px;
}

.menu-add-countdown-container label > input {
    background-color: var(--date-add-text-background-colour);
    color: var(--text-colour);

    margin-top: 4px;
    padding: 8px;
    width: 100%;

    border-radius: 4px;
    border-width: 0px;

    font-size: 14px;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
        "Helvetica Neue", sans-serif;
    font-weight: 300;
}

.menu-date-title::placeholder {
    color: var(--alt-text-colour);
    font-style: italic;
    padding-left: 4px;
}

.menu-date-title:focus::placeholder {
    color: transparent;
}

.menu-button {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
        "Helvetica Neue", sans-serif;
    font-size: 14px;
    font-weight: 300;

    color: var(--text-colour);
    background-color: transparent;
    
    border-width: 0px;
    border-radius: 4px;
    margin-right: -12px;
    
    align-self: end;
    padding: 4px 12px;
}

/* We don't want the 'add' button to be pulled rightwards, so clear it's margin */
.menu-add-countdown-container > .menu-button {
    margin-right: unset;
}

.menu-button:hover {
    background-color: var(--text-colour);
    color: var(--page-background);
}

.toolbar-container {
    cursor: default;
    justify-self: end;
    align-self: start;

    grid-column: 1;
    grid-row: 1;
}

.toolbar-container > .toolbar-button {
    color: var(--toolbar-text-colour);
    padding: 12px;

    /* Remove default button styling */
    border-width: 0px;
    border-style: none;
    background-color: transparent;
    border-radius: 4px;

    transition: color 0.5s ease;
}

.toolbar-container > .toolbar-button:hover,
.toolbar-container > .toolbar-button:active {
    color: var(--text-colour);
}

.toolbar-container > .toolbar-button:active {
    background-color: var(--alt-text-colour);
}

/* Google Material Icon Font Self Hosting */
@font-face {
    font-family: 'Material Symbols Outlined';
    font-style: normal;
    font-weight: 100 700;
    src: url(MaterialIconsOutlined-Regular.woff2) format('woff2');
}

.material-symbols-outlined {
    font-family: 'Material Symbols Outlined';
    font-weight: 300;
    font-style: normal;
    font-size: 24px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
}