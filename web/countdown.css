:root {
    color-scheme: light dark;
    --text-colour: rgb(19, 19, 19);
    --page-background: white;
    --shortcut-background: rgba(209, 209, 209, 0.5);
}

@media (prefers-color-scheme: light) {
    .force-dark {
        --text-colour: white;
        --page-background: rgb(48, 48, 48);
        --shortcut-background: rgba(19, 19, 19, 0.5);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --text-colour: white;
        --page-background: rgb(48, 48, 48);
        --shortcut-background: rgba(19, 19, 19, 0.5);
    }

    .force-light {
        --text-colour: rgb(19, 19, 19);
        --page-background: white;
        --shortcut-background: rgba(209, 209, 209, 0.5);
    }
}

body,
html {
    margin: 0px;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
        "Helvetica Neue", sans-serif;
    background-color: var(--page-background);
    color: var(--text-colour);
    -webkit-app-region: drag;
}

/* To help with multiple timers having different heights we need to wrap the
 countdowns themselves in a separate container to center the row. Then elements
 within that row are then aligned to the start of that row */
.countdown-centering-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.countdown-wrapper {
    display: flex;
    flex-direction: row;
    align-items: start;
    justify-content: center;
    max-height: 80vh;
}

/* The first the countdown is the anchor, and therefore shouldn't have a title */
.countdown-wrapper > .countdown-container:nth-child(1) .countdown-title {
    visibility: hidden;
}

.countdown-element-container {
    padding-left: 12px;
    padding-right: 12px;
    margin-left: 48px;
    margin-right: 48px;
}

.countdown-element-hide {
    display: none;
}

.countdown-number {
    font-weight: 800;
    font-size: calc(85vh/7);
    min-height: 0vh; /* see https://www.sarasoueidan.com/blog/safari-fluid-typography-bug-fix/ */
    margin-left: -4px;
    /* Why? To stop the changing width of the time components from jiggling
       around the centre point (because the width of the elements keeps changing)
       If we fix the width to something 'small', and let it overflow, it nets
       out pretty well */
    width: calc(85vh/7); /* Make the item square-ish to keep it centered */
    overflow: visible;
}

.countdown-title,
.countdown-description {
    font-weight: 100;
    font-size: 18pt;
    margin-top: -16px;
}

.countdown-title {
    font-size: 14pt;
    max-width: calc(85vh/4);
    overflow-x: hidden;
    white-space: nowrap;
    height: 24px;
}

/* Keyboard Shortcuts */
.shortcuts-container {
    position: absolute;
    width: 100vw;
    height: 100vh;
    top: 0px;
    left: 0px;

    display: grid;
    grid-template-columns: 1fr;
    
    align-items: center;
    justify-items: center;
}

#shortcuts-content {
    width: 240px;
    padding: 12px 24px 12px 24px;
    background-color: var(--shortcut-background);
    border-radius: 4px;
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    -moz-backdrop-filter: blur(20px);
}

.shortcuts-title {
    font-weight: 800;
    font-size: 36px;
}

.shortcuts-shortcuts-list {
    display: grid;
    grid-template-columns: 1fr auto;
    font-weight: 100;
}

.shortcuts-shortcuts-operation {
    align-self: start;
    grid-column: 1;
}

.shortcuts-shortcuts-key {
    justify-self: end;
    grid-column: 2;
}